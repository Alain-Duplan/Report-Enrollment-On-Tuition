ts.plot(room.board.ts, xlab = "Year", ylab = "Cost in $", main = "Room & Board Costs")
enrollment.vec <- as.numeric(as.vector(UMASS$ENROLLMENT))
enrollment.ts <- ts(enrollment.vec, frequency = 1, start = c(1984, 1))
ts.plot(enrollment.ts, xlab = "Year", ylab = "Total Students", main = "Enrollment")
applications.vec <- na.omit(as.numeric(as.vector(UMASS$APPLICATIONS)))
applications.ts <- ts(applications.vec, frequency = 1, start = c(1987, 1))
ts.plot(applications.ts, xlab = "Year", ylab = "Total Students", main = "Applicants")
acceptance.vec <- na.omit(as.numeric(as.vector(UMASS$ACCEPTANCE)))
acceptance.ts <- ts(acceptance.vec, frequency = 1, start = c(1987, 1))
ts.plot(acceptance.ts, xlab = "Year", ylab = "Total Students", main = "Acceptance")
admission.vec <- na.omit(as.numeric(as.vector(UMASS$ADMISISSION)))
admission.ts <- ts(admission.vec, frequency = 1, start = c(1987, 1))
ts.plot(admission.ts, xlab = "Year", ylab = "Total Students", main = "Admission")
accrate.vec <- na.omit(as.numeric(as.vector(UMASS$ACCRATE)))
accrate.ts <- ts(accrate.vec, frequency = 1, start = c(1987, 1))
ts.plot(accrate.ts, xlab = "Year", ylab = "Rate", main = "Acceptance Rate")
admrate.vec <- na.omit(as.numeric(as.vector(UMASS$ADMRATE)))
admrate.ts <- ts(admrate.vec, frequency = 1, start = c(1987, 1))
ts.plot(admrate.ts, xlab = "Year", ylab = "Rate", main = "Admission Rate")
#lets do some smoothing
library(TTR)
state.in.comp <- decompose(state.in.ts)
#lets do some smoothing
library(TTR)
state.in.comp <- decompose(state.in.ts)
birth.vec <- scan("C:/Users/alain/OneDrive/Documents/Info 248/week of march 24/Data Files-20200324/nybirths.csv")
birth.vec[1:10]
birth.ts1 <- ts(birth.vec, frequency=12, start=c(1946,1))
birth.ts1
birth.ts.comp <- decompose(birth.ts1)
plot(birth.ts.comp)
library(TTR)
plot.ts(birth.ts1, ylab="", xlab="")
birth.ts3 <- SMA(birth.ts1,n=3)
plot.ts(birth.ts3, ylab="", xlab="")
birth.ts8 <- SMA(birth.ts1,n=8)
plot.ts(birth.ts8, ylab="", xlab="")
birth.ts10 <- SMA(birth.ts1,n=10)
plot.ts(birth.ts10, ylab="", xlab="")
birth.ts20 <- SMA(birth.ts1,n=20)
plot.ts(birth.ts20, ylab="", xlab="")
birth.ts30 <- SMA(birth.ts1,n=30)
plot.ts(birth.ts30, ylab="", xlab="")
sv.vec <- scan("C:/Users/alain/OneDrive/Documents/Info 248/week of march 24/Data Files-20200324/souvenirts.csv")
sv.ts <- ts(sv.vec, frequency=12, start=c(1987,1))
plot(sv.ts)
plot(log(sv.ts))
amherst.weather <- read.table("C:/Users/alain/OneDrive/Documents/Info 248/week of march 24/Data Files-20200324/AmherstWeatherApril.tsv", sep ="\t", header = TRUE)
precip.vec <- amherst.weather$TotalPrecip
precip.vec <- na.omit(precip.vec)
precip.ts <- ts(data = precip.vec, frequency = 1, start = c(1990,1))
plot(precip.ts)
hw.pred <- HoltWinters(precip.ts,beta = FALSE, gamma = FALSE)
hw.pred
hw.pred <- HoltWinters(precip.ts,alpha)
hw.pred <- HoltWinters(precip.ts)
hw.pred <- HoltWinters(precip.ts,beta = FALSE, gamma = FALSE)
hw.pred
HW.fit <- HoltWinters(souv.ts)
souv <- scan("C:/Users/alain/OneDrive/Documents/Info 248/week of march 24/Data Files-20200324/souvenirts.csv")
souv.ts <- ts(souv, frequency = 12, start = c(1987,1))
plot(souv.ts)
HW.fit <- HoltWinters(souv.ts)
plot(HW.fit)
HW.pred <- forecast:::forecast.HoltWinters(HW.fit, h = 5)
forecast:::plot.forecast(HW.pred)
#lets do some smoothing
library(TTR)
state.in.pred <- HoltWinters(state.in.ts)
#lets do some smoothing
library(TTR)
state.in.pred <- HoltWinters(state.in.ts, beta = FALSE, gamma = FALSE)
plot(state.in.pred)
amherst.weather <- read.table("C:/Users/alain/OneDrive/Documents/Info 248/week of march 24/Data Files-20200324/AmherstWeatherApril.tsv", sep ="\t", header = TRUE)
precip.vec <- amherst.weather$TotalPrecip
precip.vec <- na.omit(precip.vec)
precip.ts <- ts(data = precip.vec, frequency = 1, start = c(1990,1))
plot(precip.ts)
hw.pred <- HoltWinters(precip.ts,beta = FALSE, gamma = FALSE)
hw.pred
plot(hw.pred)
hw.pred$SSE
hw.pred2 <- forecast:::forecast.HoltWinters(hw.pred, h=5)
forecast:::plot.forecast(hw.pred2)
plot.ts(hw.pred2$residuals)
hist(hw.pred2$residuals)
#making prediction models
library(forecast)
state.in.pred2 <- forecast:::forecast.HoltWinters(state.in.pred, h=5)
#lets do some smoothing
library(TTR)
state.in.pred <- HoltWinters(state.in.ts, beta = FALSE, gamma = FALSE)
#lets make some time series
state.in.vec <- as.numeric(as.vector(UMASS$`IN-STATE`))
library(readxl)
UMASS <- read_excel("UMass Enrollment.xlsx")
head(UMASS)
# add an acceptance & admission rate colum
UMASS$ACCRATE <- UMASS$ACCEPTANCE / UMASS$APPLICATIONS
UMASS$ADMRATE <- UMASS$ADMISISSION / UMASS$ACCEPTANCE
head(UMASS)
#lets make some time series
state.in.vec <- as.numeric(as.vector(UMASS$`IN-STATE`))
state.in.ts <- ts(state.in.vec, frequency = 1, start = c(1984, 1))
ts.plot(state.in.ts, xlab = "Year", ylab = "Cost in $", main = "In-State Costs")
state.out.vec <- as.numeric(as.vector(UMASS$`OUT-STATE`))
state.out.ts <- ts(state.out.vec, frequency = 1, start = c(1984, 1))
ts.plot(state.out.ts, xlab = "Year", ylab = "Cost in $", main = "Out-of-State Costs")
room.board.vec <- as.numeric(as.vector(UMASS$`ROOM & BOARD`))
room.board.ts <- ts(room.board.vec, frequency = 1, start = c(1984, 1))
ts.plot(room.board.ts, xlab = "Year", ylab = "Cost in $", main = "Room & Board Costs")
enrollment.vec <- as.numeric(as.vector(UMASS$ENROLLMENT))
enrollment.ts <- ts(enrollment.vec, frequency = 1, start = c(1984, 1))
ts.plot(enrollment.ts, xlab = "Year", ylab = "Total Students", main = "Enrollment")
applications.vec <- na.omit(as.numeric(as.vector(UMASS$APPLICATIONS)))
applications.ts <- ts(applications.vec, frequency = 1, start = c(1987, 1))
ts.plot(applications.ts, xlab = "Year", ylab = "Total Students", main = "Applicants")
acceptance.vec <- na.omit(as.numeric(as.vector(UMASS$ACCEPTANCE)))
acceptance.ts <- ts(acceptance.vec, frequency = 1, start = c(1987, 1))
ts.plot(acceptance.ts, xlab = "Year", ylab = "Total Students", main = "Acceptance")
admission.vec <- na.omit(as.numeric(as.vector(UMASS$ADMISISSION)))
admission.ts <- ts(admission.vec, frequency = 1, start = c(1987, 1))
ts.plot(admission.ts, xlab = "Year", ylab = "Total Students", main = "Admission")
accrate.vec <- na.omit(as.numeric(as.vector(UMASS$ACCRATE)))
accrate.ts <- ts(accrate.vec, frequency = 1, start = c(1987, 1))
ts.plot(accrate.ts, xlab = "Year", ylab = "Rate", main = "Acceptance Rate")
admrate.vec <- na.omit(as.numeric(as.vector(UMASS$ADMRATE)))
admrate.ts <- ts(admrate.vec, frequency = 1, start = c(1987, 1))
ts.plot(admrate.ts, xlab = "Year", ylab = "Rate", main = "Admission Rate")
#lets do some smoothing
library(TTR)
state.in.pred <- HoltWinters(state.in.ts, beta = FALSE, gamma = FALSE)
plot(state.in.pred)
#making prediction models
library(forecast)
state.in.pred2 <- forecast:::forecast.HoltWinters(state.in.pred, h=5)
forecast:::plot.forecast(state.in.pred2)
#lets look at the residuals to see if we can use this model for other graphs
plot.ts(state.in.pred2$residuals)
hist(state.in.pred2$residuals)
#for out of state
par(mfrow=c(3,1))
state.out.pred <- HoltWinters(state.out.ts, beta = FALSE, gamma = FALSE)
plot(state.out.pred)
state.out.pred2 <- forecast:::forecast.HoltWinters(state.out.pred, h=5)
forecast:::plot.forecast(state.out.pred2)
plot.ts(state.out.pred2$residuals)
hist(state.out.pred2$residuals)
#for out of state
par(mfrow=c(2,2))
state.out.pred <- HoltWinters(state.out.ts, beta = FALSE, gamma = FALSE)
plot(state.out.pred)
state.out.pred2 <- forecast:::forecast.HoltWinters(state.out.pred, h=5)
forecast:::plot.forecast(state.out.pred2)
plot.ts(state.out.pred2$residuals)
hist(state.out.pred2$residuals)
#for out of state
par(mfrow=c(2,1))
state.out.pred <- HoltWinters(state.out.ts, beta = FALSE, gamma = FALSE)
plot(state.out.pred)
state.out.pred2 <- forecast:::forecast.HoltWinters(state.out.pred, h=5)
forecast:::plot.forecast(state.out.pred2)
plot.ts(state.out.pred2$residuals)
hist(state.out.pred2$residuals)
#for out of state
par(mfrow=c(1,2))
state.out.pred <- HoltWinters(state.out.ts, beta = FALSE, gamma = FALSE)
plot(state.out.pred)
state.out.pred2 <- forecast:::forecast.HoltWinters(state.out.pred, h=5)
forecast:::plot.forecast(state.out.pred2)
plot.ts(state.out.pred2$residuals)
hist(state.out.pred2$residuals)
#for out of state
state.out.pred <- HoltWinters(state.out.ts, beta = FALSE, gamma = FALSE)
plot(state.out.pred)
state.out.pred2 <- forecast:::forecast.HoltWinters(state.out.pred, h=5)
forecast:::plot.forecast(state.out.pred2)
plot.ts(state.out.pred2$residuals)
hist(state.out.pred2$residuals)
#for out of state
room.board.pred <- HoltWinters(room.board.ts, beta = FALSE, gamma = FALSE)
plot(room.board.pred)
room.board.pred2 <- forecast:::forecast.HoltWinters(room.board.pred, h=5)
forecast:::plot.forecast(room.board.pred2)
plot.ts(room.board.pred2$residuals)
hist(room.board.pred2$residuals)
#for enrollment
enrollment.pred <- HoltWinters(enrollment.ts, beta = FALSE, gamma = FALSE)
plot(enrollment.pred)
enrollment.pred2 <- forecast:::forecast.HoltWinters(enrollment.pred, h=5)
forecast:::plot.forecast(enrollment.pred2)
plot.ts(enrollment.pred2$residuals)
hist(enrollment.pred2$residuals)
#for applications
applications.pred <- HoltWinters(applications.ts, beta = FALSE, gamma = FALSE)
plot(applications.pred)
applications.pred2 <- forecast:::forecast.HoltWinters(applications.pred, h=5)
forecast:::plot.forecast(applications.pred2)
plot.ts(applications.pred2$residuals)
hist(applications.pred2$residuals)
#for acceptance
acceptance.pred <- HoltWinters(acceptance.ts, beta = FALSE, gamma = FALSE)
plot(acceptance.pred)
acceptance.pred2 <- forecast:::forecast.HoltWinters(acceptance.pred, h=5)
forecast:::plot.forecast(acceptance.pred2)
plot.ts(acceptance.pred2$residuals)
hist(acceptance.pred2$residuals)
#for acceptance
admission.pred <- HoltWinters(admission.ts, beta = FALSE, gamma = FALSE)
plot(admission.pred)
admission.pred2 <- forecast:::forecast.HoltWinters(admission.pred, h=5)
forecast:::plot.forecast(admission.pred2)
plot.ts(admission.pred2$residuals)
hist(admission.pred2$residuals)
#for acceptance rate
accrate.pred <- HoltWinters(accrate.ts, beta = FALSE, gamma = FALSE)
plot(accrate.pred)
accrate.pred2 <- forecast:::forecast.HoltWinters(accratepred, h=5)
#for acceptance rate
accrate.pred <- HoltWinters(accrate.ts, beta = FALSE, gamma = FALSE)
plot(accrate.pred)
accrate.pred2 <- forecast:::forecast.HoltWinters(accrate.pred, h=5)
forecast:::plot.forecast(accrate.pred2)
plot.ts(accrate.pred2$residuals)
hist(accrate.pred2$residuals)
#for acceptance rate
accrate.pred <- HoltWinters(accrate.ts, beta = FALSE, gamma = FALSE)
plot(accrate.pred)
accrate.pred2 <- forecast:::forecast.HoltWinters(accrate.pred, h=1)
forecast:::plot.forecast(accrate.pred2)
plot.ts(accrate.pred2$residuals)
hist(accrate.pred2$residuals)
#for admission
admission.pred <- HoltWinters(admission.ts, beta = FALSE, gamma = FALSE)
plot(admission.pred)
admission.pred2 <- forecast:::forecast.HoltWinters(admission.pred, h=1)
forecast:::plot.forecast(admission.pred2)
plot.ts(admission.pred2$residuals)
hist(admission.pred2$residuals)
#for acceptance
acceptance.pred <- HoltWinters(acceptance.ts, beta = FALSE, gamma = FALSE)
plot(acceptance.pred)
acceptance.pred2 <- forecast:::forecast.HoltWinters(acceptance.pred, h=1)
forecast:::plot.forecast(acceptance.pred2)
plot.ts(acceptance.pred2$residuals)
hist(acceptance.pred2$residuals)
#for applications
applications.pred <- HoltWinters(applications.ts, beta = FALSE, gamma = FALSE)
plot(applications.pred)
applications.pred2 <- forecast:::forecast.HoltWinters(applications.pred, h=1)
forecast:::plot.forecast(applications.pred2)
plot.ts(applications.pred2$residuals)
hist(applications.pred2$residuals)
#for enrollment
enrollment.pred <- HoltWinters(enrollment.ts, beta = FALSE, gamma = FALSE)
plot(enrollment.pred)
enrollment.pred2 <- forecast:::forecast.HoltWinters(enrollment.pred, h=1)
forecast:::plot.forecast(enrollment.pred2)
plot.ts(enrollment.pred2$residuals)
hist(enrollment.pred2$residuals)
#for out of state
room.board.pred <- HoltWinters(room.board.ts, beta = FALSE, gamma = FALSE)
plot(room.board.pred)
room.board.pred2 <- forecast:::forecast.HoltWinters(room.board.pred, h=1)
forecast:::plot.forecast(room.board.pred2)
plot.ts(room.board.pred2$residuals)
hist(room.board.pred2$residuals)
#for out of state
state.out.pred <- HoltWinters(state.out.ts, beta = FALSE, gamma = FALSE)
plot(state.out.pred)
state.out.pred2 <- forecast:::forecast.HoltWinters(state.out.pred, h=1)
forecast:::plot.forecast(state.out.pred2)
plot.ts(state.out.pred2$residuals)
hist(state.out.pred2$residuals)
#making prediction models
library(forecast)
state.in.pred2 <- forecast:::forecast.HoltWinters(state.in.pred, h=1)
forecast:::plot.forecast(state.in.pred2)
#lets look at the residuals to see if we can use this model for other graphs
plot.ts(state.in.pred2$residuals)
hist(state.in.pred2$residuals)
#for admission rate
admrate.pred <- HoltWinters(admrate.ts, beta = FALSE, gamma = FALSE)
plot(admrate.pred)
admrate.pred2 <- forecast:::forecast.HoltWinters(admrate.pred, h=1)
forecast:::plot.forecast(admrate.pred2)
plot.ts(admrate.pred2$residuals)
hist(admrate.pred2$residuals)
#before continueing lets deflate anything variables having to do with money
#make a vector containg inflation rate with base year of 1984
#Data was found using Bureau of Labor Statistics
inflation <- c(1.0 ,1.04, 1.06, 1.09, 1.14, 1.19, 1.26, 1.31, 1.35, 1.39, 1.43, 1.47, 1.51, 1.54, 1.57, 1.60, 1.66, 1.70, 1.73, 1.77, 1.82, 1.88, 1.94, 2.0, 2.07, 2.06, 2.10, 2.16, 2.21, 2.24, 2.28, 2.28, 2.31, 2.42, 2.16)
UMASS$INFLATION <- inflation
#before continueing lets deflate anything variables having to do with money
#make a vector containg inflation rate with base year of 1984
#Data was found using Bureau of Labor Statistics
inflation <- c(1.0 ,1.04, 1.06, 1.09, 1.14, 1.19, 1.26, 1.31, 1.35, 1.39, 1.43, 1.47, 1.51, 1.54, 1.57, 1.60, 1.66, 1.70, 1.73, 1.77, 1.82, 1.88, 1.94, 2.0, 2.07, 2.06, 2.10, 2.16, 2.21, 2.24, 2.28, 2.28, 2.31, 2.36 2.42, 2.46)
#before continueing lets deflate anything variables having to do with money
#make a vector containg inflation rate with base year of 1984
#Data was found using Bureau of Labor Statistics
inflation <- c(1.0 ,1.04, 1.06, 1.09, 1.14, 1.19, 1.26, 1.31, 1.35, 1.39, 1.43, 1.47, 1.51, 1.54, 1.57, 1.60, 1.66, 1.70, 1.73, 1.77, 1.82, 1.88, 1.94, 2.0, 2.07, 2.06, 2.10, 2.16, 2.21, 2.24, 2.28, 2.28, 2.31, 2.36, 2.42, 2.46)
UMASS$INFLATION <- inflation
#before continueing lets deflate anything variables having to do with money
#make a vector containg inflation rate with base year of 1984
#Data was found using Bureau of Labor Statistics
inflation <- c(1.0 ,1.04, 1.06, 1.09, 1.14, 1.19, 1.26, 1.31, 1.35, 1.39, 1.43, 1.47, 1.51, 1.54, 1.57, 1.60, 1.66, 1.70, 1.73, 1.77, 1.82, 1.88, 1.94, 2.0, 2.07, 2.06, 2.10, 2.16, 2.21, 2.24, 2.28, 2.28, 2.31, 2.36, 2.42, 2.46)
UMASS$INFLATION <- inflation
UMASS$IN-STATE-ADJ <- UMASS$`IN-STATE` * UMASS$INFLATION
#before continueing lets deflate anything variables having to do with money
#make a vector containg inflation rate with base year of 1984
#Data was found using Bureau of Labor Statistics
inflation <- c(1.0 ,1.04, 1.06, 1.09, 1.14, 1.19, 1.26, 1.31, 1.35, 1.39, 1.43, 1.47, 1.51, 1.54, 1.57, 1.60, 1.66, 1.70, 1.73, 1.77, 1.82, 1.88, 1.94, 2.0, 2.07, 2.06, 2.10, 2.16, 2.21, 2.24, 2.28, 2.28, 2.31, 2.36, 2.42, 2.46)
UMASS$INFLATION <- inflation
UMASS$IN-STATE-ADJ <- UMASS$`IN-STATE` * UMASS$INFLATION
#before continueing lets deflate anything variables having to do with money
#make a vector containg inflation rate with base year of 1984
#Data was found using Bureau of Labor Statistics
inflation <- c(1.0 ,1.04, 1.06, 1.09, 1.14, 1.19, 1.26, 1.31, 1.35, 1.39, 1.43, 1.47, 1.51, 1.54, 1.57, 1.60, 1.66, 1.70, 1.73, 1.77, 1.82, 1.88, 1.94, 2.0, 2.07, 2.06, 2.10, 2.16, 2.21, 2.24, 2.28, 2.28, 2.31, 2.36, 2.42, 2.46)
UMASS$INFLATION <- inflation
UMASS$`IN-STATE-ADJ` <- UMASS$`IN-STATE` * UMASS$INFLATION
UMASS$`OUT-STATE-ADJ` <- UMASS$`OUT-STATE` * UMASS$INFLATION
#lets make some time series
state.in.vec <- as.numeric(as.vector(UMASS$`IN-STATE-ADJ`))
state.in.ts <- ts(state.in.vec, frequency = 1, start = c(1984, 1))
ts.plot(state.in.ts, xlab = "Year", ylab = "Cost in $", main = "Adjusted In-State Costs")
state.out.vec <- as.numeric(as.vector(UMASS$`OUT-STATE-ADJ`))
state.out.ts <- ts(state.out.vec, frequency = 1, start = c(1984, 1))
ts.plot(state.out.ts, xlab = "Year", ylab = "Cost in $", main = "Adjusted Out-of-State Costs")
room.board.vec <- as.numeric(as.vector(UMASS$`ROOM & BOARD`))
room.board.ts <- ts(room.board.vec, frequency = 1, start = c(1984, 1))
ts.plot(room.board.ts, xlab = "Year", ylab = "Cost in $", main = "Room & Board Costs")
enrollment.vec <- as.numeric(as.vector(UMASS$ENROLLMENT))
enrollment.ts <- ts(enrollment.vec, frequency = 1, start = c(1984, 1))
ts.plot(enrollment.ts, xlab = "Year", ylab = "Total Students", main = "Enrollment")
applications.vec <- na.omit(as.numeric(as.vector(UMASS$APPLICATIONS)))
applications.ts <- ts(applications.vec, frequency = 1, start = c(1987, 1))
ts.plot(applications.ts, xlab = "Year", ylab = "Total Students", main = "Applicants")
acceptance.vec <- na.omit(as.numeric(as.vector(UMASS$ACCEPTANCE)))
acceptance.ts <- ts(acceptance.vec, frequency = 1, start = c(1987, 1))
ts.plot(acceptance.ts, xlab = "Year", ylab = "Total Students", main = "Acceptance")
admission.vec <- na.omit(as.numeric(as.vector(UMASS$ADMISISSION)))
admission.ts <- ts(admission.vec, frequency = 1, start = c(1987, 1))
ts.plot(admission.ts, xlab = "Year", ylab = "Total Students", main = "Admission")
accrate.vec <- na.omit(as.numeric(as.vector(UMASS$ACCRATE)))
accrate.ts <- ts(accrate.vec, frequency = 1, start = c(1987, 1))
ts.plot(accrate.ts, xlab = "Year", ylab = "Rate", main = "Acceptance Rate")
admrate.vec <- na.omit(as.numeric(as.vector(UMASS$ADMRATE)))
admrate.ts <- ts(admrate.vec, frequency = 1, start = c(1987, 1))
ts.plot(admrate.ts, xlab = "Year", ylab = "Rate", main = "Admission Rate")
#before continueing lets deflate anything variables having to do with money
#make a vector containg inflation rate with base year of 1984
#Data was found using Bureau of Labor Statistics
inflation <- c(1.0 ,1.04, 1.06, 1.09, 1.14, 1.19, 1.26, 1.31, 1.35, 1.39, 1.43, 1.47, 1.51, 1.54, 1.57, 1.60, 1.66, 1.70, 1.73, 1.77, 1.82, 1.88, 1.94, 2.0, 2.07, 2.06, 2.10, 2.16, 2.21, 2.24, 2.28, 2.28, 2.31, 2.36, 2.42, 2.46)
UMASS$INFLATION <- inflation
UMASS$`IN-STATE-ADJ` <- UMASS$`IN-STATE` * UMASS$INFLATION
UMASS$`OUT-STATE-ADJ` <- UMASS$`OUT-STATE` * UMASS$INFLATION
#before continueing lets deflate anything variables having to do with money
#make a vector containg inflation rate with base year of 1984
#Data was found using Bureau of Labor Statistics
inflation <- c(1.0 ,1.04, 1.06, 1.09, 1.14, 1.19, 1.26, 1.31, 1.35, 1.39, 1.43, 1.47, 1.51, 1.54, 1.57, 1.60, 1.66, 1.70, 1.73, 1.77, 1.82, 1.88, 1.94, 2.0, 2.07, 2.06, 2.10, 2.16, 2.21, 2.24, 2.28, 2.28, 2.31, 2.36, 2.42, 2.46)
UMASS$INFLATION <- inflation
UMASS$`IN-STATE-ADJ` <- UMASS$`IN-STATE` / UMASS$INFLATION
UMASS$`OUT-STATE-ADJ` <- UMASS$`OUT-STATE` / UMASS$INFLATION
#lets make some time series
state.in.vec <- as.numeric(as.vector(UMASS$`IN-STATE-ADJ`))
state.in.ts <- ts(state.in.vec, frequency = 1, start = c(1984, 1))
ts.plot(state.in.ts, xlab = "Year", ylab = "Cost in $", main = "Adjusted In-State Costs")
state.out.vec <- as.numeric(as.vector(UMASS$`OUT-STATE-ADJ`))
state.out.ts <- ts(state.out.vec, frequency = 1, start = c(1984, 1))
ts.plot(state.out.ts, xlab = "Year", ylab = "Cost in $", main = "Adjusted Out-of-State Costs")
room.board.vec <- as.numeric(as.vector(UMASS$`ROOM & BOARD`))
room.board.ts <- ts(room.board.vec, frequency = 1, start = c(1984, 1))
ts.plot(room.board.ts, xlab = "Year", ylab = "Cost in $", main = "Room & Board Costs")
enrollment.vec <- as.numeric(as.vector(UMASS$ENROLLMENT))
enrollment.ts <- ts(enrollment.vec, frequency = 1, start = c(1984, 1))
ts.plot(enrollment.ts, xlab = "Year", ylab = "Total Students", main = "Enrollment")
applications.vec <- na.omit(as.numeric(as.vector(UMASS$APPLICATIONS)))
applications.ts <- ts(applications.vec, frequency = 1, start = c(1987, 1))
ts.plot(applications.ts, xlab = "Year", ylab = "Total Students", main = "Applicants")
acceptance.vec <- na.omit(as.numeric(as.vector(UMASS$ACCEPTANCE)))
acceptance.ts <- ts(acceptance.vec, frequency = 1, start = c(1987, 1))
ts.plot(acceptance.ts, xlab = "Year", ylab = "Total Students", main = "Acceptance")
admission.vec <- na.omit(as.numeric(as.vector(UMASS$ADMISISSION)))
admission.ts <- ts(admission.vec, frequency = 1, start = c(1987, 1))
ts.plot(admission.ts, xlab = "Year", ylab = "Total Students", main = "Admission")
accrate.vec <- na.omit(as.numeric(as.vector(UMASS$ACCRATE)))
accrate.ts <- ts(accrate.vec, frequency = 1, start = c(1987, 1))
ts.plot(accrate.ts, xlab = "Year", ylab = "Rate", main = "Acceptance Rate")
admrate.vec <- na.omit(as.numeric(as.vector(UMASS$ADMRATE)))
admrate.ts <- ts(admrate.vec, frequency = 1, start = c(1987, 1))
ts.plot(admrate.ts, xlab = "Year", ylab = "Rate", main = "Admission Rate")
#before continueing lets deflate anything variables having to do with money
#make a vector containg inflation rate with base year of 1984
#Data was found using Bureau of Labor Statistics
inflation <- c(1.0 ,1.04, 1.06, 1.09, 1.14, 1.19, 1.26, 1.31, 1.35, 1.39, 1.43, 1.47, 1.51, 1.54, 1.57, 1.60, 1.66, 1.70, 1.73, 1.77, 1.82, 1.88, 1.94, 2.0, 2.07, 2.06, 2.10, 2.16, 2.21, 2.24, 2.28, 2.28, 2.31, 2.36, 2.42, 2.46)
UMASS$INFLATION <- inflation
UMASS$`IN-STATE-ADJ` <- UMASS$`IN-STATE` / UMASS$INFLATION
UMASS$`OUT-STATE-ADJ` <- UMASS$`OUT-STATE` / UMASS$INFLATION
UMASS$`ROOM & BOARD ADJ` <- UMASS$`ROOM & BOARD` / UMASS$INFLATION
#lets make some time series
state.in.vec <- as.numeric(as.vector(UMASS$`IN-STATE-ADJ`))
state.in.ts <- ts(state.in.vec, frequency = 1, start = c(1984, 1))
ts.plot(state.in.ts, xlab = "Year", ylab = "Cost in $", main = "Adjusted In-State Costs")
state.out.vec <- as.numeric(as.vector(UMASS$`OUT-STATE-ADJ`))
state.out.ts <- ts(state.out.vec, frequency = 1, start = c(1984, 1))
ts.plot(state.out.ts, xlab = "Year", ylab = "Cost in $", main = "Adjusted Out-of-State Costs")
room.board.vec <- as.numeric(as.vector(UMASS$`ROOM & BOARD ADJ`))
room.board.ts <- ts(room.board.vec, frequency = 1, start = c(1984, 1))
ts.plot(room.board.ts, xlab = "Year", ylab = "Cost in $", main = "Room & Board Costs")
enrollment.vec <- as.numeric(as.vector(UMASS$ENROLLMENT))
enrollment.ts <- ts(enrollment.vec, frequency = 1, start = c(1984, 1))
ts.plot(enrollment.ts, xlab = "Year", ylab = "Total Students", main = "Enrollment")
applications.vec <- na.omit(as.numeric(as.vector(UMASS$APPLICATIONS)))
applications.ts <- ts(applications.vec, frequency = 1, start = c(1987, 1))
ts.plot(applications.ts, xlab = "Year", ylab = "Total Students", main = "Applicants")
acceptance.vec <- na.omit(as.numeric(as.vector(UMASS$ACCEPTANCE)))
acceptance.ts <- ts(acceptance.vec, frequency = 1, start = c(1987, 1))
ts.plot(acceptance.ts, xlab = "Year", ylab = "Total Students", main = "Acceptance")
admission.vec <- na.omit(as.numeric(as.vector(UMASS$ADMISISSION)))
admission.ts <- ts(admission.vec, frequency = 1, start = c(1987, 1))
ts.plot(admission.ts, xlab = "Year", ylab = "Total Students", main = "Admission")
accrate.vec <- na.omit(as.numeric(as.vector(UMASS$ACCRATE)))
accrate.ts <- ts(accrate.vec, frequency = 1, start = c(1987, 1))
ts.plot(accrate.ts, xlab = "Year", ylab = "Rate", main = "Acceptance Rate")
admrate.vec <- na.omit(as.numeric(as.vector(UMASS$ADMRATE)))
admrate.ts <- ts(admrate.vec, frequency = 1, start = c(1987, 1))
ts.plot(admrate.ts, xlab = "Year", ylab = "Rate", main = "Admission Rate")
#lets do some smoothing
library(TTR)
state.in.pred <- HoltWinters(state.in.ts, beta = FALSE, gamma = FALSE)
plot(state.in.pred)
#making prediction models
library(forecast)
state.in.pred2 <- forecast:::forecast.HoltWinters(state.in.pred, h=1)
forecast:::plot.forecast(state.in.pred2)
#lets look at the residuals to see if we can use this model for other graphs
plot.ts(state.in.pred2$residuals)
hist(state.in.pred2$residuals)
#for out of state
state.out.pred <- HoltWinters(state.out.ts, beta = FALSE, gamma = FALSE)
plot(state.out.pred)
state.out.pred2 <- forecast:::forecast.HoltWinters(state.out.pred, h=1)
forecast:::plot.forecast(state.out.pred2)
plot.ts(state.out.pred2$residuals)
hist(state.out.pred2$residuals)
#for out of state
room.board.pred <- HoltWinters(room.board.ts, beta = FALSE, gamma = FALSE)
plot(room.board.pred)
room.board.pred2 <- forecast:::forecast.HoltWinters(room.board.pred, h=1)
forecast:::plot.forecast(room.board.pred2)
plot.ts(room.board.pred2$residuals)
hist(room.board.pred2$residuals)
#for admission rate
admrate.pred <- HoltWinters(admrate.ts, beta = FALSE, gamma = FALSE)
plot(admrate.pred)
admrate.pred2 <- forecast:::forecast.HoltWinters(admrate.pred, h=1)
forecast:::plot.forecast(admrate.pred2)
plot.ts(admrate.pred2$residuals)
hist(admrate.pred2$residuals)
library(readxl)
CashFlows <- read_excel("UMass Balance sheets.xlsx", sheet = 1)
RevenuesExpenses <- read_excel("UMass Balance sheets.xlsx", sheet = 2)
NetPosition <- read_excel("UMass Balance sheets.xlsx", sheet = 3)
netPosNet <- subset(NetPosition, NETS == "1")
netPosNet<- netPosNet[1,2:6]
netPosNet
netPosNet <- as.numeric(as.vector(netPosNet))
netPosNet <- rev(netPosNet)
NetPosition.ts <-ts(netPosNet, frequency = 1, start = c(2015,1))
ts.plot(NetPosition.ts)
NetPosition.ts
netPosNets <- subset(NetPosition, NETS == "1")
netPosNet<- netPosNet[1,2:6]
netPosNets <- subset(NetPosition, NETS == "1")
netPosNet<- netPosNets[1,2:6]
netPosNet
netPosNet <- as.numeric(as.vector(netPosNet))
netPosNet <- rev(netPosNet)
NetPosition.ts <-ts(netPosNet, frequency = 1, start = c(2015,1))
ts.plot(NetPosition.ts)
NetPosition.ts
View(netPosNets)
netPosNets <- subset(NetPosition, NETS == "1")
netPosTotal<- netPosNets[1,2:6]
netPosTotal
library(readxl)
CashFlows <- read_excel("UMass Balance sheets.xlsx", sheet = 1)
RevenuesExpenses <- read_excel("UMass Balance sheets.xlsx", sheet = 2)
NetPosition <- read_excel("UMass Balance sheets.xlsx", sheet = 3)
inflation <- c(1, 1.01, 1.03, 1.06, 1.08)
netPosNets <- subset(NetPosition, NETS == "1")
netPosTotal<- netPosNets[1,2:6]
netPosTotal <- netPosTotal / inflation
netPosTotal.vec <- as.numeric(as.vector(netPosTotal))
netPosTotal.vec <- rev(netPosTotal.vec)
netPosTotal.ts <-ts(netPosTotal.vec, frequency = 1, start = c(2015,1))
ts.plot(netPosTotal.ts)
NetPosition.pred <- HoltWinters(netPosTotal.ts, beta = FALSE, gamma = FALSE)
plot(NetPosition.pred)
library(readxl)
library(TTR)
library(forecast)
CashFlows <- read_excel("UMass Balance sheets.xlsx", sheet = 1)
RevenuesExpenses <- read_excel("UMass Balance sheets.xlsx", sheet = 2)
NetPosition <- read_excel("UMass Balance sheets.xlsx", sheet = 3)
inflation <- c(1, 1.01, 1.03, 1.06, 1.08)
NetPosition.pred2 <- forecast:::forecast.HoltWinters(NetPosition.pred, h=1)
forecast:::plot.forecast(NetPosition.pred2
NetPosition.pred2 <- forecast:::forecast.HoltWinters(NetPosition.pred, h=1)
forecast:::plot.forecast(NetPosition.pred2)
plot.ts(NetPosition.pred2$residuals)
hist(NetPosition.pred2$residuals)
